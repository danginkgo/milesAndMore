<?xml version="1.0" encoding="UTF-8"?>
<suite name="CreateAccountTest" user="dan.rusu">
 
 
################################################################################## 	
########## PAGE 1 INPUT VALIDATION ###############################################
##################################################################################
    	<test name="CreateAccountPage1_InputValidation" 
  			appiumServerUrl="http://0.0.0.0:4723/wd/hub"
  			platformName="Android"
  			deviceName="Nexus_5X"
  			app="C:\automationWorkspace\mobile\apk\Miles More_v1.4.1_apkpure.com.apk">
  			
  		<testcase name="LoginPageValidate"/>
  	
  		# Verify Login page static text	
  		<testcase name="CreateAccount" 

  			onBoardTitleText="Your Overview" 
  			onBoardText="Donâ€™t miss out on any awards or exclusive offers no matter where you are."
  			createAccountButtonText="Create Account"
  			signInButtonText="Sign in"
  			stopAtFailure="false"/>
  			
  			
  		<testcase name="CreateAccountPage1Validate"/>
  		
  		
  		### Create Account Page 1 ###
  		
  		# Verify Create Account Page 1 static text
  		<testcase name="CreateAccountPage1Setup" 
  			pageTitleText="Register for the Miles &amp; More program right now and never miss another mile!"
  			salutationTitleMrText="Mr."
	  		salutationTitleMrsText="Mrs."
		  	academicTitleText="Academic Title"
		  	firstNameText="First Name"
		 	lastNameText="Last Name"
		  	signInAsGuestText="Sign in as Guest"
		  	nextButtonText="Next"
		  	
		  	stopAtFailure="false"/>
		
		
		
		### Create Account Page 1 ###  	
		# Test 1 invalid input: 
  		# First Name input: send empty text 	
  		# Last Name input: send empty text 	
		 <testcase name="CreateAccountPage1Setup" /> 		 
  			
  			
  		<testcase name="CreateAccountPage1Next"/> 
  			
  		<testcase name="VerifyCreateAcountPage1Errors" 
  			expectedErrorsCounter="2"
  			expectedErrors="Invalid first name. It can consist of 2 up to 15 characters.  First name may only consist of letters or a hyphen between the letters.|Invalid last name. It can consist of 2 up to 31 characters.  Last name may only consist of letters or a hyphen between the letters."
  			stopAtFailure="false"/>
  				
  		
  				
  		### Create Account Page 1 ###
  		# Test 2 invalid input: 
  		# First Name input: one letter 	
  		# Last Name input: one letter  
  		###
  		<testcase name="CreateAccountPage1Setup" 
  			firstName="a" 
  			lastName="b"/>
  			
  		<testcase name="CreateAccountPage1Next"/> 	
  		
  		<testcase name="VerifyCreateAcountPage1Errors" 
  			expectedErrorsCounter="2"
  			expectedErrors="Invalid first name. It can consist of 2 up to 15 characters.|Invalid last name. It can consist of 2 up to 31 characters."
  			stopAtFailure="false"/> -->
  			
  		<!-- ISSUE - next test case cannot clear the input -->
  
<!--    		### Create Account Page 1 ###
  		# Test 3 invalid input: 
  		# First Name input: 2 letters + hyphen
  		# Last Name input: 2 letters + hyphen 
  		###
  		<testcase name="CreateAccountPage1Setup" 
  			firstName="aa-" 
  			lastName="ba-"/>
  			
  		<testcase name="CreateAccountPage1Next"/> 	
  		
  		<testcase name="VerifyCreateAcountPage1Errors" 
  			expectedErrorsCounter="2"
  			expectedErrors="First name may only consist of letters or a hyphen between the letters.|Last name may only consist of letters or a hyphen between the letters."
  			stopAtFailure="false"/>
  		
  		
  		
   		### Create Account Page 1 ###
  		# Test 4 invalid input: 
  		# First Name input: hyphen + 2 letters
  		# Last Name input: hyphen + 2 letters 
  		###
  		<testcase name="CreateAccountPage1Setup" 
  			firstName="-aa" 
  			lastName="-ba"/>
  			
  		<testcase name="CreateAccountPage1Next"/> 	
  		
  		<testcase name="VerifyCreateAcountPage1Errors" 
  			expectedErrorsCounter="2"
  			expectedErrors="First name may only consist of letters or a hyphen between the letters.|Last name may only consist of letters or a hyphen between the letters."
  			stopAtFailure="false"/>  -->
			
			
			 	
		### Create Account Page 1 ###
  		# Test 5 invalid input: 
  		# First Name input: hyphen + 2 letters
  		# Last Name input: hyphen + 2 letters 
  		###
  		<testcase name="CreateAccountPage1Setup" 
  			firstName="aa1" 
  			lastName="bb2"/>
  			
  		<testcase name="CreateAccountPage1Next"/> 	
  		
  		<testcase name="VerifyCreateAcountPage1Errors" 
  			expectedErrorsCounter="2"
  			expectedErrors="First name may only consist of letters or a hyphen between the letters.|Last name may only consist of letters or a hyphen between the letters."
  			stopAtFailure="false"/>
			
			
 		### Create Account Page 1 ###
  		# Test 6 invalid input: 
  		# First Name input: 2 letters + not letter character 
  		# Last Name input: 2 letters + not letter character 
  		<testcase name="CreateAccountPage1Setup" 
  			firstName="!" 
  			lastName="?"/>
  			
  		<testcase name="CreateAccountPage1Next"/> 	
  		
  		<testcase name="VerifyCreateAcountPage1Errors" 
  			expectedErrorsCounter="2"
  			expectedErrors="Invalid first name. It can consist of 2 up to 15 characters.  First name may only consist of letters or a hyphen between the letters.|Invalid last name. It can consist of 2 up to 31 characters.  Last name may only consist of letters or a hyphen between the letters."
  			stopAtFailure="false"/> 
				 
				
		
		### Create Account Page 1 ###
  		# Test 7 invalid input: 
  		# First Name input:  letters separated by 2 hyphens 
  		# Last Name input:  letters separated by 2 hyphens 
  		<testcase name="CreateAccountPage1Setup" 
  			firstName="a--b"                          
  			lastName="aaa--bbb"/>
  			
  		<testcase name="CreateAccountPage1Next"/> 	
  		
  		<testcase name="VerifyCreateAcountPage1Errors" 
  			expectedErrorsCounter="2"
  			expectedErrors="First name may only consist of letters or a hyphen between the letters.|Last name may only consist of letters or a hyphen between the letters."
  			stopAtFailure="false"/>
		
		
		
		### Create Account Page 1 ###
  		# Test 8 valid input: 
  		# First Name input: 2 characters 	
  		# Last Name input: 2 characters 
  		###
  		<testcase name="CreateAccountPage1Setup" 
  			firstName="aa" 
  			lastName="bb"/>
  			
  		<testcase name="CreateAccountPage1Next"/>
  		
  		<testcase name="CreateAccountPage2Validate"/> 	
  		
  		<testcase name="CreateAccountPage2GoBack" />
  			
  		<testcase name="VerifyCreateAcountPage1Errors" 
  			expectedErrorsCounter="0"
  			stopAtFailure="false"/>
		
		
		
  		### Create Account Page 1 ###
  		# Test 9 valid input: 
  		# First Name input: send more than 15 characters 	
  		# Last Name input: send more than 31 characters 
  		# Inputs are truncated at 15 and 31 characters and no error appears.
  		###
  		<testcase name="CreateAccountPage1Setup" 
  			firstName="moreThanFifteenchars" 
  			lastName="moreThanThirtyOneCharactersInput"/>
  			
  		<testcase name="CreateAccountPage1Next"/> 
  		
  		<testcase name="CreateAccountPage2Validate"/> 		
  		
  		<testcase name="CreateAccountPage2GoBack" />
  			
  		<testcase name="VerifyCreateAcountPage1Errors" 
  			expectedErrorsCounter="0"
  			stopAtFailure="false"/>
  			
  			
  			
  		### Create Account Page 1 ###
  		# Test 10 valid input: 
  		# First Name input: 2 characters separated by hyphen	
  		# Last Name input: 2 characters separated by hyphen 
  		###
  		<testcase name="CreateAccountPage1Setup" 
  			firstName="a-a" 
  			lastName="b-b"/>
  			
  		<testcase name="CreateAccountPage1Next"/>
  		
  		<testcase name="CreateAccountPage2Validate"/> 	 	
  		
  		<testcase name="CreateAccountPage2GoBack" />
  			
  		<testcase name="VerifyCreateAcountPage1Errors" 
  			expectedErrorsCounter="0"
  			stopAtFailure="false"/>
  			
  	</test>	 	 
  			
 
 
 
   			
################################################################################## 	
########## PAGE 2 INPUT VALIDATION ###############################################
##################################################################################
    <test name="CreateAccountPage2_InputValidation" 
  			appiumServerUrl="http://0.0.0.0:4723/wd/hub"
  			platformName="Android"
  			deviceName="Nexus_5X"
  			app="C:\automationWorkspace\mobile\apk\Miles More_v1.4.1_apkpure.com.apk">
  	
  		<testcase name="LoginPageValidate"/>
  	
  		<testcase name="CreateAccount"/>
  		
  		<testcase name="CreateAccountPage1Validate"/>
  		
   		# valid setup				
  		<testcase name="CreateAccountPage1Setup" 
  			firstName="Dan" 
  			lastName="Rusu" />
  			
  			
  		<testcase name="CreateAccountPage1Next"/>
  			
		<testcase name="CreateAccountPage2Validate"/>

  		### Create Account Page 2 ###
  		
  		## Verify static text
  		<testcase name="CreateAccountPage2Setup"
  			birthDateText="Birth date"
			streetAddressText="Street + number"
			zipCodeText="Zip code"
			cityText="City"
			countryText="Country"
			nextButtonText="Next"
			stopOnFailure="false"
			
			note="Verify page static text."/>
  		
  		
  		
  		### Create Account Page 2 ###
  		# Test invalid input: 
  		# All empty 
  		###
	   	<testcase name="CreateAccountPage2Setup"/> 
  			
  		<testcase name="CreateAccountPage2Next" 
  			note="All imputs empty."/> 
  		
  		<testcase name="VerifyCreateAcountPage2Errors" 
  			expectedErrorsCounter="5"
  			stopAtFailure="false"/> 
  			
  			
  			
  		### Create Account Page 2 ###
  		# Set valid values for: Birth Date, Zipcode, Country (only empty is invalid) 
  		###
	   	<testcase name="CreateAccountPage2Setup"
	   		birthDate="04/April/1983"
	   		zipCode="1111"
	   		country="Aruba"
	   		/> 
  			
  		<testcase name="CreateAccountPage2Next"/> 
  		
  		<testcase name="VerifyCreateAcountPage2Errors" 
  			expectedErrorsCounter="2"
  			stopAtFailure="false"/> 
  			
  		
  		
  		### Create Account Page 2 ###
  		# Test invalid input: 
  		# streetAddress: letters and no number 
  		# city: letters + number
  		###
	   	<testcase name="CreateAccountPage2Setup"
	   		streetAddress="aaa"
	   		city="aaa12"/> 
  			
  		<testcase name="CreateAccountPage2Next"/> 
  		
  		<testcase name="VerifyCreateAcountPage2Errors" 
  			expectedErrorsCounter="2"
  			stopAtFailure="false"/> 
  			
  			
  		
  		### Create Account Page 2 ###
  		# Test invalid input: 
  		# 3 streetAddress: letters + symbol + number 
  		###
	   	<testcase name="CreateAccountPage2Setup"
	   		streetAddress="aaa!30"/> 
  			
  		<testcase name="CreateAccountPage2Next"/> 
  		
  		<testcase name="VerifyCreateAcountPage2Errors" 
  			expectedErrorsCounter="2"
  			stopAtFailure="false"/> 
  		
  		
  		### Create Account Page 2 ###
  		# Test invalid input: 
 		# streetAddress:  symbol
  		###
	   	<testcase name="CreateAccountPage2Setup"
	   		streetAddress="!"/> 
  			
  		<testcase name="CreateAccountPage2Next"/> 
  		
  		<testcase name="VerifyCreateAcountPage2Errors" 
  			expectedErrorsCounter="2"
  			stopAtFailure="false"/>
  		
  		
  		
  		### Create Account Page 2 ###
  		# Test valid streetAddress input: 
  		# streetAddress: name + [+space] nr 
  		###
	   	<testcase name="CreateAccountPage2Setup"
	   		streetAddress="venus 16"/> 
  			
  		<testcase name="CreateAccountPage2Next"/> 
  		
  		<testcase name="VerifyCreateAcountPage2Errors" 
  			expectedErrorsCounter="1"
  			stopAtFailure="false"/>
  		
  		
  		
  		 ### Create Account Page 2 ###
  		# Test invalid input: 
  		# city: starts with hyphen
  		###
	   	<testcase name="CreateAccountPage2Setup"
	   		city="-Rome"/> 
  			
  		<testcase name="CreateAccountPage2Next"/> 
  		
  		<testcase name="VerifyCreateAcountPage2Errors" 
  			expectedErrorsCounter="1"
  			stopAtFailure="false"/>
  			
  			
  			
  		### Create Account Page 2 ###
  		# Test invalid input: 
  		# city: ends with hyphen
  		###
	   	<testcase name="CreateAccountPage2Setup"
	   		city="Rome-"/> 
  			
  		<testcase name="CreateAccountPage2Next"/> 
  		
  		<testcase name="VerifyCreateAcountPage2Errors" 
  			expectedErrorsCounter="1"
  			stopAtFailure="false"/>	
  	
  			
  			
  			
  		### Create Account Page 2 ###
  		# Test invalid input: 
  		# city: Word + space + hyphen + word 
  		###
	   	<testcase name="CreateAccountPage2Setup"
	   		city="Rome -One"/> 
  			
  		<testcase name="CreateAccountPage2Next"/> 
  		
  		<testcase name="VerifyCreateAcountPage2Errors" 
  			expectedErrorsCounter="1"
  			stopAtFailure="false"/>	
  		
  		
  		
  		### Create Account Page 2 ###
  		# Test invalid input: 
  		# city: Word + hyphen + space + word 
  		###
	   	<testcase name="CreateAccountPage2Setup"
	   		city="Rome- One"/> 
  			
  		<testcase name="CreateAccountPage2Next"/> 
  		
  		<testcase name="VerifyCreateAcountPage2Errors" 
  			expectedErrorsCounter="1"
  			stopAtFailure="false"/> 
  		
  		
  		
  		
  		### Create Account Page 2 ###
  		# Test invalid input: 
  		# city: Word + 2 hyphens + word 
  		###
	   	<testcase name="CreateAccountPage2Setup"
	   		city="Rome--One"/>
  			
  		<testcase name="CreateAccountPage2Next"/> 
  		
  		<testcase name="VerifyCreateAcountPage2Errors" 
  			expectedErrorsCounter="1"
  			stopAtFailure="false"/>
  		
  		
  		
  		### Create Account Page 2 ###
  		# Test invalid input: 
  		# city: Word + 2 spaces + word
  		###
	   	<testcase name="CreateAccountPage2Setup"
	   		city="Rome  One"/> 
  			
  		<testcase name="CreateAccountPage2Next"/> 
  		
  		<testcase name="VerifyCreateAcountPage2Errors" 
  			expectedErrorsCounter="1"
  			stopAtFailure="false"/>
  			
  			
  			
  		### Create Account Page 2 ###
  		# Test valid input: 
  		# city: letters + hyphen + space + letters + hyphen + letters
  		###
	   	<testcase name="CreateAccountPage2Setup"
	   		city="Rome-One Rome-Two"/> 
  			
  		<testcase name="CreateAccountPage2Next"/> 
  		
  		<testcase name="VerifyCreateAcountPage2Errors" 
  			expectedErrorsCounter="0"
  			stopAtFailure="false"/> 
			
 	  </test>
  	



 
################################################################################## 	
########## PAGE 3 INPUT VALIDATION ###############################################
##################################################################################
	<test name="CreateAccountPage3_TestInputValidation" 
  			appiumServerUrl="http://0.0.0.0:4723/wd/hub"
  			platformName="Android"
  			deviceName="Nexus_5X"
  			app="C:\automationWorkspace\mobile\apk\Miles More_v1.4.1_apkpure.com.apk">
  	
  		<testcase name="LoginPageValidate"/>
  	
  		<testcase name="CreateAccount"/>
  		
  		### Create Account Page 1 ###
  		<testcase name="CreateAccountPage1Validate"/>
  		
  		<testcase name="CreateAccountPage1Setup" 
  			title="Mr." 
  			academicTitle="Prof."
  			firstName="Dan" 
  			lastName="Rusu" />
  			
  		<testcase name="CreateAccountPage1Next"/>
  			
  			

  		### Create Account Page 2 ###
  		<testcase name="CreateAccountPage2Validate"/>
  		
	   	<testcase name="CreateAccountPage2Setup"
  			birthDate="09/April/1983" 
  			streetAddress="str. C-tin Noica 19D" 
  			zipCode="300199" 
  			city="Blank" 
  			country="Aruba"/> 
  			
  		<testcase name="CreateAccountPage2Next"/> 
  		
  		<testcase name="CreateAccountPage3Validate"/>
  		
  		
  		
  		##### USERNAME #####
  		### Create Account Page 3 - Invalid username ###
  		# 1 Case - empty username
  		<testcase name="CreateAccountPage3Setup"
  			termsRegisterSwitch="true"/> 
  			
  		<testcase name="CreateAccountPage3CreateAccount"/>
  		
  		<testcase name="VerifyCreateAcountPage3Errors" 
  			expectedErrors="Username must not be empty."
  			stopAtFailure="false"/>
  			
  			
  		### Create Account Page 3 - Invalid username ###
  		# 2 Case - less than 4 characters (3)
  		<testcase name="CreateAccountPage3Setup"
  			userName="abc"
  			termsRegisterSwitch="true"/> 
  			
  		<testcase name="CreateAccountPage3CreateAccount"/>
  		
  		<testcase name="VerifyCreateAcountPage3Errors" 
  			expectedErrors="Username must be between 4 and 16 characters."
  			stopAtFailure="false"/>
  			
  			
  		### Create Account Page 3 - Invalid username ###
  		# 3 Case - 17 characters
  		<testcase name="CreateAccountPage3Setup"
  			userName="userNameLong0016a"
  			termsRegisterSwitch="true"/> 
  			
  		<testcase name="CreateAccountPage3CreateAccount"/>
  		
  		<testcase name="VerifyCreateAcountPage3Errors" 
  			expectedErrors="Username must be between 4 and 16 characters."
  			stopAtFailure="false"/>
  		
  		
  		
  		### Create Account Page 3 - Invalid username ###
  		# 4 Case - Letters + space + letters
  		<testcase name="CreateAccountPage3Setup"
  			userName="name-one"
  			termsRegisterSwitch="true"/> 
  			
  		<testcase name="CreateAccountPage3CreateAccount"/>
  		
  		<testcase name="VerifyCreateAcountPage3Errors" 
  			expectedErrors="Username may not contain any whitespaces. Username may only consist of letters or numbers."
  			stopAtFailure="false"/>
  			
  			
  			
  		### Create Account Page 3 - Invalid username ###
  		# 5 Case - chars and symbols
  		<testcase name="CreateAccountPage3Setup"
  			userName="name-one"
  			termsRegisterSwitch="true"/> 
  			
  		<testcase name="CreateAccountPage3CreateAccount"/>
  		
  		<testcase name="VerifyCreateAcountPage3Errors" 
  			expectedErrors="Username may only consist of letters or numbers."
  			stopAtFailure="false"/>
  			
  			
  		### Create Account Page 3 - Invalid username ###
  		# 6 Case - Digit + 4 letters
  		<testcase name="CreateAccountPage3Setup"
  			userName="1abcd"
  			termsRegisterSwitch="true"/> 
  			
  		<testcase name="CreateAccountPage3CreateAccount"/>
  		
  		<testcase name="VerifyCreateAcountPage3Errors" 
  			expectedErrors="Username needs to start with a letter.  Username may only consist of letters or numbers."
  			stopAtFailure="false"/>
  			
  			
  		### Create Account Page 3 - Valid username ###
  		# 7 Case - 4 characters (letters + numbers, start with letter)
  		<testcase name="CreateAccountPage3Setup"
  			userName="a1b2"
  			termsRegisterSwitch="true"/> 
  			
  		<testcase name="CreateAccountPage3CreateAccount"/>
  		
  		<testcase name="VerifyCreateAcountPage3Errors" 
  			expectedErrorsCounter="2"
  			stopAtFailure="false"/>
  			
  			
  		### Create Account Page 3 - Valid username ###
  		# 8 Case - 4 characters (letters)
  		<testcase name="CreateAccountPage3Setup"
  			userName="abcd"
  			termsRegisterSwitch="true"/> 
  			
  		<testcase name="CreateAccountPage3CreateAccount"/>
  		
  		<testcase name="VerifyCreateAcountPage3Errors" 
  			expectedErrorsCounter="2"
  			stopAtFailure="false"/>	
  			
  			
  		### Create Account Page 3 - Valid username ###
  		# 9 Case - upper boundary 16 characters
  		<testcase name="CreateAccountPage3Setup"
  			userName="userNameLong0016"
  			termsRegisterSwitch="true"/> 
  			
  		<testcase name="CreateAccountPage3CreateAccount"/>
  		
  		<testcase name="VerifyCreateAcountPage3Errors" 
  			expectedErrorsCounter="2"
  			stopAtFailure="false"/>	
  		
  		
  		
  		##### PASSWORD #####
   		### Create Account Page 3 - Invalid password ###
  		# 1 Case - empty
  		<testcase name="CreateAccountPage3Setup"
  			termsRegisterSwitch="true"
  			newPassword=""/> 
  			
  		<testcase name="CreateAccountPage3CreateAccount"/> 
  			
  		<testcase name="VerifyCreateAcountPage3Errors" 
  			expectedErrors="Password must be between 8 and 32 characters.Password must contain at least one upper-case letter.Password must contain at least one lower-case letter. Password must contain at least one digit. Password must contain at least one special character (excluding Â§)."
  			stopAtFailure="false"/>		
  			
  			
  			
  		### Create Account Page 3 - Invalid password ###
  		# 2 Case - 7 characters
  		<testcase name="CreateAccountPage3CreateAccount"
  			newPassword="abcdef7"/>
  			
  		<testcase name="CreateAccountPage3CreateAccount"/> 
  		
  		<testcase name="VerifyCreateAcountPage3Errors" 
  			expectedErrors="Password must be between 8 and 32 characters.Password must contain at least one upper-case letter. Password must contain at least one lower-case letter. Password must contain at least one digit.Password must contain at least one special character (excluding Â§)."
  			stopAtFailure="false"/>	
  			
  			
  			
  		### Create Account Page 3 - Invalid password ###
  		# 3 Case - 33 characters
  		<testcase name="CreateAccountPage3Setup"
  			newPassword="abcd5abcd10abcd16abcd22abcd28ab33"/> 
  			
  		<testcase name="CreateAccountPage3CreateAccount"/> 
  			
  		<testcase name="VerifyCreateAcountPage3Errors" 
  			expectedErrors="Password must be between 8 and 32 characters.Password must contain at least one upper-case letter. Password must contain at least one lower-case letter. Password must contain at least one digit. Password must contain at least one special character (excluding Â§)."
  			stopAtFailure="false"/>	
  		
  		
  		
  		### Create Account Page 3 - Invalid password ###
  		# 4 Case - 8 lower-case letters,  no upper-case letter, no digit, no special character
  		<testcase name="CreateAccountPage3Setup"
  			newPassword="abcdfegh"/>
  			
  		<testcase name="CreateAccountPage3CreateAccount"/>  
  		
  		<testcase name="VerifyCreateAcountPage3Errors" 
  			expectedErrors="Password must contain at least one upper-case letter. Password must contain at least one digit. Password must contain at least one special character (excluding Â§)."
  			stopAtFailure="false"/>	
  			
  			
  		
  	  	### Create Account Page 3 - Invalid password ###
  		# 5 Case - 8 upper-case letters,  no lower-case letter, no digit, no special character
  		<testcase name="CreateAccountPage3Setup"
  			newPassword="ABCDEFGH"/> 
  		
  		<testcase name="CreateAccountPage3CreateAccount"/> 	
  		
  		<testcase name="VerifyCreateAcountPage3Errors" 
  			expectedErrors="Password must contain at least one lower-case letter. Password must contain at least one digit. Password must contain at least one special character (excluding Â§)."
  			stopAtFailure="false"/>	
  		  			
  			
  		
  	  	### Create Account Page 3 - Invalid password ###
  		# 6 Case - Upper + lower case letters + no digit, no special character
  		<testcase name="CreateAccountPage3Setup"
  			newPassword="abcdEFGH"/> 
  		
  		<testcase name="CreateAccountPage3CreateAccount"/> 	
  		
  		<testcase name="VerifyCreateAcountPage3Errors" 
  			expectedErrors="Password must contain at least one digit. Password must contain at least one special character (excluding Â§)."
  			stopAtFailure="false"/>	
  			  			
  			
  		
  	  	### Create Account Page 3 - Invalid password ###
  		# 7 Case - Upper + lower case letters + digit, no special character
  		<testcase name="CreateAccountPage3Setup"
  			newPassword="abcdEFG1"/> 
  		
  		<testcase name="CreateAccountPage3CreateAccount"/> 	
  		
  		<testcase name="VerifyCreateAcountPage3Errors" 
  			expectedErrors="Password must contain at least one special character (excluding Â§)."
  			stopAtFailure="false"/>
  			  			
  			
  		
<!--    	  	### Create Account Page 3 - Invalid password ###
  		# 8 Case - Upper + lower case letters + digit + special char Â§
  		<testcase name="CreateAccountPage3Setup"
  			newPassword="abcdEFG1Â§"/> 
  		
  		<testcase name="CreateAccountPage3CreateAccount"/> 	
  		
  		<testcase name="VerifyCreateAcountPage3Errors" 
  			expectedErrors=""
  			stopAtFailure="false"/> -->
  			  			
  			
  		
  	  	### Create Account Page 3 - Valid password ###
  		# 9 Case - Upper + lower case letters + digit + special char other than Â§
  		<testcase name="CreateAccountPage3Setup"
  			termsRegisterSwitch="true"
  			useName="newUser"
  			newPassword="abcdEFG1!"
  			confirmPassword="abcdEFG1!"
  			email="danginkgo@yahoo.com"
  			/> 
  		
  		<testcase name="CreateAccountPage3CreateAccount"/> 	
  		
  		<testcase name="VerifyCreateAcountPage3Errors" 
  			expectedErrorsCounter="0"
  			stopAtFailure="false"/>	 
  			
  		
		##### PASSWORD CONFIRM #####
  		
  		
	</test> 
 
	
</suite>